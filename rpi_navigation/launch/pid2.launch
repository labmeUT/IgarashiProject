<launch>

<!-- Run Bosch BNO055 IMU -->
<arg name="bosch_config_file" default="$(find bosch_imu_driver)/config/imu_bosch_test.yaml"/> 
<node pkg="bosch_imu_driver" type="bosch_imu_node.py" name="bosch_imu_node" output="screen">
    <rosparam file="$(arg bosch_config_file)" command="load"/>
</node>

<!-- IMU Bosh transformation publisher -->
<node name="base_link_to_imu_bosch" pkg="tf2_ros" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 1.0 base_link imu_bosch_link" >
</node>

<!-- Run Ublox GNSS -->
<node pkg="receive_ublox" type="receive_ublox" name="receive_ublox" output="screen">
    <param name="ublox_port" type="string" value="/dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0"/>
    <remap from="/gps/data" to="/fix" />
</node>

<!-- Ublox GNSS transformation publisher-->
<node name="bl_gps" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 base_link gps" />

<node pkg="gps_common" type="utm_odometry_node" name="utm_odometry_node" respawn="true" output="screen">
    <remap from="/odom" to="/utm" />
</node>

<node pkg="rpi_navigation" type="rpi_control4.py" name="rpi_control" output="screen"></node>
<node pkg="gnss_yaw" type="gnss_yaw.py" name="gnss_yaw" output="screen"></node>
<node pkg="gnss_yaw" type="fusion.py" name="gnss_yaw" output="screen"></node>

</launch>


